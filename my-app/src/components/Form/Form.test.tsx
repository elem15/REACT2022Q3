import React from 'react';
import { render, screen } from '@testing-library/react';
import userEvent from '@testing-library/user-event';
import FormPageContainer from './FormContainerHooks';

describe('render form', () => {
  it('form submit', () => {
    render(<FormPageContainer />);
    const inputEl = screen.getByPlaceholderText('address');
    expect(inputEl).toBeInTheDocument();
    userEvent.type(inputEl, 'test text');
    const dateEl = screen.getByPlaceholderText('date');
    expect(dateEl).toBeInTheDocument();
    userEvent.type(dateEl, '1999-01-01');
    expect(screen.getByDisplayValue(/test text/i)).toBeInTheDocument();
    const selectEl = screen.getByPlaceholderText('select') as HTMLSelectElement;
    userEvent.selectOptions(selectEl, 'townhouse');
    expect(selectEl.value).toBe('townhouse');
    const soldEl = screen.getByLabelText('House is already sold');
    userEvent.click(soldEl);
    const urgentEl = screen.getByLabelText(/emergency sale/i);
    userEvent.click(urgentEl);
    const button = screen.getByRole('button');
    userEvent.click(button);
    expect(screen.getByText(/test text/i)).toBeInTheDocument();
    expect(screen.getByText(/1999-01-01/i)).toBeInTheDocument();
    screen.getAllByText(/townhouse/i);
    screen.getAllByText(/sold/i);
    screen.getAllByText(/emergency/i);
  });
  it('multi cards render', () => {
    render(<FormPageContainer />);
    const inputEl = screen.getByPlaceholderText('address');
    expect(inputEl).toBeInTheDocument();
    userEvent.type(inputEl, 'test text');
    const dateEl = screen.getByPlaceholderText('date');
    expect(dateEl).toBeInTheDocument();
    userEvent.type(dateEl, '1999-01-01');
    expect(screen.getByDisplayValue(/test text/i)).toBeInTheDocument();
    const selectEl = screen.getByPlaceholderText('select') as HTMLSelectElement;
    userEvent.selectOptions(selectEl, 'townhouse');
    expect(selectEl.value).toBe('townhouse');
    const button = screen.getByRole('button');
    userEvent.click(button);
    expect(screen.getByText(/test text/i)).toBeInTheDocument();
    expect(screen.getByText(/1999-01-01/i)).toBeInTheDocument();
    screen.getAllByText(/townhouse/i);
    userEvent.type(inputEl, 'test text 2');
    userEvent.type(dateEl, '2022-01-01');
    userEvent.selectOptions(selectEl, 'apartment');
    userEvent.click(button);
    expect(screen.getByText(/test text 2/i)).toBeInTheDocument();
    expect(screen.getByText(/2022-01-01/i)).toBeInTheDocument();
    screen.getAllByText(/apartment/i);
    screen.getAllByText(/test text/i);
    expect(screen.getByText(/1999-01-01/i)).toBeInTheDocument();
    screen.getAllByText(/townhouse/i);
  });
  it('form submit incorrect input', () => {
    render(<FormPageContainer />);
    const inputEl = screen.getByPlaceholderText('address');
    expect(inputEl).toBeInTheDocument();
    userEvent.type(inputEl, 'qwe');
    const dateEl = screen.getByPlaceholderText('date');
    expect(dateEl).toBeInTheDocument();
    userEvent.type(dateEl, '1009-01-01');
    const button = screen.getByRole('button');
    userEvent.click(button);
    expect(screen.queryByText('qwe')).toBeNull();
    expect(screen.getByText(/address is incorrect/i)).toBeInTheDocument();
    expect(screen.getByText(/address is incorrect/i)).toHaveClass('alert');
    expect(screen.getByText(/date is incorrect/i)).toBeInTheDocument();
    expect(screen.getByText(/select type of house/i)).toBeInTheDocument();
  });
});
